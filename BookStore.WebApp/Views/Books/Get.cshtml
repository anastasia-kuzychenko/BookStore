@model BookStore.Services.DTOs.PaginatedListDTO<BookStore.Models.Book>
@{
    ViewData["Title"] = "Books";
}
<!-- Add pagination and search by atributes -->
<div class="text-center">
    <!--Head-->
    <h1 class="display-4 mb-4">
        Books
        <!--Create-->
        <a asp-controller="Books" asp-action="Create"><i class="bi bi-journal-plus"></i></a>
    </h1>
    <!--Search-->
    <form class="text-left">
        <div class="form-row">
            <div class="form-group col-md-7">
                <label>Search</label>
                <input id="search-input" type="text" class="form-control" placeholder="Search by key word" value="@ViewBag.KeyWord">
            </div>
            <div class="form-group col-md-2">
                <label>Prise min</label>
                <input id="min-prise-input" type="number" class="form-control" placeholder="Enter min prise" value="@ViewBag.MinPrise">
            </div>
            <div class="form-group col-md-2">
                <label>Prise max</label>
                <input id="max-prise-input" type="number" class="form-control" placeholder="Enter max prise" value="@ViewBag.MaxPrise">
            </div>
            <div class="form-group col-md-1">
                <button type="button" id="search-btn" class="btn btn-primary w-100" style=" margin-top: 32px; height: 37px">Search</button>
            </div>
        </div>
    </form>
    <!--Table-->
    <div class="mb-2" style="overflow-x: scroll; width: 100%">
        <table class="table table-bordered table-hover bg-white mb-0" style="width: 1500px">
            <!--Table head-->
            <thead>
                <tr>
                    <th scope="col">Id</th>
                    <th scope="col">
                        Name
                        @if (ViewBag.CurrentSort == "Name")
                        {
                            <a class="text-muted" asp-controller="Books" asp-action="Get"><i class="bi bi-funnel-fill"></i></a>
                        }
                        else
                        {
                            <a class="text-muted" asp-controller="Books" asp-action="Get" asp-route-sortOrder="Name"><i class="bi bi-funnel"></i></a>
                        }
                    </th>
                    <th scope="col">
                        Author
                        @if (ViewBag.CurrentSort == "Author.Name")
                        {
                            <a class="text-muted" asp-controller="Books" asp-action="Get"><i class="bi bi-funnel-fill"></i></a>
                        }
                        else
                        {
                            <a class="text-muted" asp-controller="Books" asp-action="Get" asp-route-sortOrder="Author.Name"><i class="bi bi-funnel"></i></a>
                        }
                    </th>
                    <th scope="col">Publisher</th>
                    <th scope="col">
                        Prise
                        @if (ViewBag.CurrentSort == "Prise")
                        {
                            <a class="text-muted" asp-controller="Books" asp-action="Get"><i class="bi bi-funnel-fill"></i></a>
                        }
                        else
                        {
                            <a class="text-muted" asp-controller="Books" asp-action="Get" asp-route-sortOrder="Prise"><i class="bi bi-funnel"></i></a>
                        }
                    </th>
                    <th scope="col">Recommended Prise</th>
                    <th scope="col">
                        Date
                        @if (ViewBag.CurrentSort == "Date")
                        {
                            <a class="text-muted" asp-controller="Books" asp-action="Get"><i class="bi bi-funnel-fill"></i></a>
                        }
                        else
                        {
                            <a class="text-muted" asp-controller="Books" asp-action="Get" asp-route-sortOrder="Date"><i class="bi bi-funnel"></i></a>
                        }
                    </th>
                    <th scope="col">Revision Number</th>
                    <th scope="col">Assessment</th>
                </tr>
            </thead>
            <!--Table body-->
            <tbody id="myTable">
                @foreach (var book in Model)
                {
                    <tr>
                        <td>@book.Id</td>
                        <td>@book.Name</td>
                        <td>@book.Author.FullName</td>
                        <td>@book.Publisher</td>
                        <td>@book.Prise$</td>
                        <td>@book.RecommendedPrise$</td>
                        <td>@book.Date.ToString("dd/MM/yyyy")</td>
                        <td>@book.RevisionNumber</td>
                        <td>@book.Assessment</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <!--Pagination-->
    <div class="row mb-5">
        <!--Page size-->
        <div class="col-sm d-flex justify-content-start">
            <select class="custom-select custom-select-sm mb-0" style="width: 60px">
                <option selected>10</option>
                <option value="1">15</option>
            </select>
        </div>
        <!--Page index and count-->
        <div class="col-sm">
            <p class="text-muted text-nowrap mb-0 mr-4">Page @Model.PageIndex of @Model.TotalPages</p>
        </div>
        <!--Pages numbers-->
        <div id="pages-list" class="col-sm d-flex justify-content-end">
            <div class="btn-group">
                @if (Model.HasPreviousPage)
                {
                    var prev = Model.PageIndex - 1;
                    <button class="btn btn-sm btn-primary" value="@prev"><i class="bi bi-arrow-left-short"></i></button>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    var btnClass = "";
                    @if (Model.PageIndex == i)
                    {
                        btnClass = "active";
                    }
                    <button class="btn btn-sm btn-primary @btnClass" value="@i">@i</button>
                }
                @if (Model.HasNextPage)
                {
                    var next = Model.PageIndex + 1;
                    <button class="btn btn-sm btn-primary" value="@next"><i class="bi bi-arrow-right-short"></i></button>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        function getQuery() {
            var keyWord = $("#search-input").val() ?? "";
            var minPrise = $("#min-prise-input").val() ?? "";
            var maxPrise = $("#max-prise-input").val() ?? "";
            return "keyWord=" + encodeURIComponent(keyWord)
                + "&minPrise=" + minPrise
                + "&maxPrise=" + maxPrise
                + "&sortOrder=" + "@ViewBag.CurrentSort";
        }

        $("#search-btn").click(() => {
            window.location.href = "/Books/?" + getQuery();
        })

        $("#pages-list").on("click", "button", function () {
            var index = $(this).val();
            window.location.href = '/Books/?pageNumber=' + index + '&' + getQuery();
        });

        $("tbody").on("click", "tr", function () {
            var id = $('td:first', this).text();
            window.location.href = '/Books/' + id;
        });
    </script>
}