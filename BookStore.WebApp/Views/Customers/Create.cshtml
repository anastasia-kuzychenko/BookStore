@model BookStore.Models.Customer
@{
    ViewData["Title"] = "Create customer";
}

<div class="text-center">
    <h1 class="display-4 mb-4">Create Customer</h1>
</div>

<form method="post" class="needs-validation" novalidate>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label>Name</label>
            <input type="text" class="form-control" asp-for="Name" placeholder="Enter name">
            <div class="invalid-feedback">
                <span asp-validation-for="Name"></span>
            </div>
        </div>
        <div class="form-group col-md-6">
            <label>Surname</label>
            <input type="text" class="form-control" asp-for="Surname" placeholder="Enter surname">
            <div class="invalid-feedback">
                <span asp-validation-for="Surname"></span>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label>Email</label>
        <input type="email" class="form-control" asp-for="Email" placeholder="Enter email">
        <div class="invalid-feedback">
            <span asp-validation-for="Email"></span>
        </div>
    </div>
    <div class="form-group">
        <label>Phone</label>
        <input type="tel" class="form-control" asp-for="Phone" placeholder="Enter phone">
        <div class="invalid-feedback">
            <span asp-validation-for="Phone"></span>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Create</button>
    <a class="btn btn-danger" href="javascript:void(0);" onclick="history.go(-1);">Cancel</a>
</form>

@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
    <script>
        var settings = {
            validClass: "is-valid",
            errorClass: "is-invalid"
        };
        $.validator.setDefaults(settings);
        $.validator.unobtrusive.options = settings;
    </script>
}   